import os
import sys
import base64
import tempfile
from tkinter import Tk, Button, Label
from PIL import Image, ImageTk
from io import BytesIO

# --- 埋め込んだBase64画像（※それぞれの .txt ファイルの中身を貼る） ---
ICON_BASE64 = b"""

"""

LOGO_BASE64 = b"""
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
"""

# --- ドキュメントフォルダの言語切り替えファイル処理 ---
documents_path = os.path.expanduser("~/Documents")
japanese_file = os.path.join(documents_path, "ae_force_japanese.txt")
english_file = os.path.join(documents_path, "ae_force_english.txt")

def set_japanese():
    if not os.path.exists(japanese_file):
        open(japanese_file, 'w').close()
    if os.path.exists(english_file):
        os.remove(english_file)
        open(japanese_file, 'w').close()
    root.destroy()

def set_english():
    if not os.path.exists(english_file):
        open(english_file, 'w').close()
    if os.path.exists(japanese_file):
        os.remove(japanese_file)
        open(english_file, 'w').close()
    root.destroy()

# --- アイコンとロゴ処理 ---
def set_window_icon(window):
    tmp_icon = tempfile.NamedTemporaryFile(delete=False, suffix=".ico")
    tmp_icon.write(base64.b64decode(ICON_BASE64))
    tmp_icon.close()
    window.iconbitmap(tmp_icon.name)

def get_logo_image():
    img_data = base64.b64decode(LOGO_BASE64)
    img = Image.open(BytesIO(img_data))
    img = img.resize((33, 33), Image.Resampling.LANCZOS)
    return ImageTk.PhotoImage(img)

# --- ウィンドウ作成とUI配置 ---
root = Tk()
root.title("AELC")
root.geometry("300x200")
root.configure(bg='#1f1f1f')
root.minsize(300, 200)

set_window_icon(root)
logo_img = get_logo_image()

logo_label = Label(root, image=logo_img, bg='#1f1f1f')
root.update_idletasks()

def place_logo():
    logo_label.place(x=root.winfo_width() - 33, y=root.winfo_height() - 33)

place_logo()
root.bind('<Configure>', lambda event: place_logo())

button_style = {
    "bg": "#1f1f1f", "fg": "#EBEBEB",
    "width": 20, "height": 2,
    "relief": "flat",
    "highlightthickness": 2,
    "highlightbackground": "#EBEBEB",
    "highlightcolor": "#EBEBEB"
}

Button(root, text="Japanese", command=set_japanese, **button_style).place(relx=0.5, rely=0.4, anchor='center')
Button(root, text="English", command=set_english, **button_style).place(relx=0.5, rely=0.6, anchor='center')

root.mainloop()
